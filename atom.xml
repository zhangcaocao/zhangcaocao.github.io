<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小火箭 | Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.oez-blog.space/"/>
  <updated>2017-07-27T07:24:15.725Z</updated>
  <id>http://www.oez-blog.space/</id>
  
  <author>
    <name>机智的小火箭</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记使用VirtualBox+Windows7安装ubuntu,开机异常处理办法</title>
    <link href="http://www.oez-blog.space/2017/07/26/%E8%AE%B0%E4%BD%BF%E7%94%A8VirtualBox-Windows7%E5%AE%89%E8%A3%85ubuntu-%E5%BC%80%E6%9C%BA%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.oez-blog.space/2017/07/26/记使用VirtualBox-Windows7安装ubuntu-开机异常处理办法/</id>
    <published>2017-07-27T06:57:27.000Z</published>
    <updated>2017-07-27T07:24:15.725Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otneosm59.bkt.clouddn.com/fm_blog_2.jpg" alt="封面"><br>前几天,想在Windows下弄一只轻量级的C语言开发环境,然后配置了一天的<code>Vscode</code>(别问我为毛线,惊了),那些教程,甚至那只插件的官方文档,都和那个玩意有很大的区别,反正惊了,一气之下,决定弄一只虚拟机Linux:</p>
<p>结果,他喵的,开始安装,启动的时候就出问题了:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">The virtual machine &apos;Ubuntu&apos; has terminated unexpectedly during startup with exit code 1 (0x1). More details may be available in &apos;C:\Users\pamela\VirtualBox VMs\Ubuntu\Logs\VBoxHardening.log&apos;.</div><div class="line"></div><div class="line"></div><div class="line">返回 代码:</div><div class="line">E_FAIL (0x80004005)</div><div class="line">组件:</div><div class="line">MachineWrap</div><div class="line">界面:</div><div class="line">IMachine &#123;b2547866-a0a1-4391-8b86-6952d82efaa0&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://otneosm59.bkt.clouddn.com/2017_7_27_8.png" alt="问题"></p>
<h4 id="这个相似问题的问题-网上剧他喵的多的教程"><a href="#这个相似问题的问题-网上剧他喵的多的教程" class="headerlink" title="这个相似问题的问题,网上剧他喵的多的教程:"></a>这个相似问题的问题,网上剧他喵的多的教程:</h4><blockquote>
<ul>
<li>大概就是找到安装目录下的vboxdrv文件夹，</li>
<li>如D:\Program Files\Oracle\VirtualBox\drivers\vboxdrv，</li>
<li>右击VBoxDrv.inf，选安装，然后重启。</li>
</ul>
</blockquote>
<h4 id="历史的教训告诉我-没什么卵用-反正我的不行-然后发现-这只VirtualBox的启动还有几个选项"><a href="#历史的教训告诉我-没什么卵用-反正我的不行-然后发现-这只VirtualBox的启动还有几个选项" class="headerlink" title="历史的教训告诉我,没什么卵用(反正我的不行),  然后发现,这只VirtualBox的启动还有几个选项:"></a>历史的教训告诉我,没什么卵用(反正我的不行),  然后发现,这只<code>VirtualBox</code>的启动还有几个选项:</h4><blockquote>
<ul>
<li>正常启动(N)</li>
<li>无界面启动(H)</li>
<li>分离式启动(D)</li>
</ul>
</blockquote>
<h4 id="随后果断放弃正常启动-N-选择无界面启动-H-然后-妥妥的-哈哈哈-机智如我"><a href="#随后果断放弃正常启动-N-选择无界面启动-H-然后-妥妥的-哈哈哈-机智如我" class="headerlink" title="随后果断放弃正常启动(N), 选择无界面启动(H),然后,妥妥的,哈哈哈,机智如我"></a>随后果断放弃<code>正常启动(N)</code>, 选择<code>无界面启动(H)</code>,然后,妥妥的,哈哈哈,机智如我</h4><p>看图就知道啦,点显示就可以了<br><img src="http://otneosm59.bkt.clouddn.com/2017_7_27_11.png" alt="无界面启动"></p>
<p>这也许就是男人的直觉吧….</p>
<h4 id="说明一下嗷"><a href="#说明一下嗷" class="headerlink" title="说明一下嗷:"></a>说明一下嗷:</h4><blockquote>
<ul>
<li>此次异常原因不明,看一只慕课网上的教程,貌似可以重装系统;不过,我这样操作确实可以解决问题.</li>
</ul>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otneosm59.bkt.clouddn.com/fm_blog_2.jpg&quot; alt=&quot;封面&quot;&gt;&lt;br&gt;前几天,想在Windows下弄一只轻量级的C语言开发环境,然后配置了一天的&lt;code&gt;Vscode&lt;/code&gt;(别问我为毛线,惊了
    
    </summary>
    
      <category term="Linux" scheme="http://www.oez-blog.space/categories/Linux/"/>
    
    
      <category term="日常填坑" scheme="http://www.oez-blog.space/tags/%E6%97%A5%E5%B8%B8%E5%A1%AB%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>记写某只小爬虫是遇到的坑及解决方法</title>
    <link href="http://www.oez-blog.space/2017/07/26/%E8%AE%B0%E5%86%99%E6%9F%90%E5%8F%AA%E5%B0%8F%E7%88%AC%E8%99%AB%E6%98%AF%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://www.oez-blog.space/2017/07/26/记写某只小爬虫是遇到的坑及解决方法/</id>
    <published>2017-07-27T04:12:59.000Z</published>
    <updated>2017-07-27T05:38:03.754Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://otneosm59.bkt.clouddn.com/fem_blog_1.jpg" alt="封面"><br>某日,发现一只挺好的<a href="http://sj.zol.com.cn/mobilesoft/good_1.html" target="_blank" rel="external">网址</a>,于是很想把上面的信息爬下来,练练手,过程中发现几处坑,在这里总结一下:</p>
<h2 id="那个网站的样子"><a href="#那个网站的样子" class="headerlink" title="那个网站的样子:"></a>那个网站的样子:</h2><p><img src="http://otneosm59.bkt.clouddn.com/2017_7_27_9.png" alt="网站的样子:"></p>
<h2 id="爬虫目的与思路"><a href="#爬虫目的与思路" class="headerlink" title="爬虫目的与思路:"></a>爬虫目的与思路:</h2><blockquote>
<ul>
<li>目的: 爬取各个app的信息,包括图片,名字,系统要求,大小,人气,简介;</li>
<li>思路: 没啥思路,一条正则表达式完了;</li>
</ul>
</blockquote>
<h2 id="源代码获取"><a href="#源代码获取" class="headerlink" title="源代码获取:"></a>源代码获取:</h2><blockquote>
<ul>
<li>这只代码,毫无面向对象,在下新手,大佬砸砖轻点;</li>
<li><a href="https://github.com/zhangcaocao/APP_Spider" target="_blank" rel="external">Github上</a></li>
</ul>
</blockquote>
<h2 id="重点-遇到的坑"><a href="#重点-遇到的坑" class="headerlink" title="重点,遇到的坑:"></a>重点,遇到的坑:</h2><h3 id="1-在好不容易匹配成功之后-输出一波如下图所示的乱码-惊了"><a href="#1-在好不容易匹配成功之后-输出一波如下图所示的乱码-惊了" class="headerlink" title="1, 在好不容易匹配成功之后,输出一波如下图所示的乱码,惊了:"></a>1, 在好不容易匹配成功之后,输出一波如下图所示的乱码,惊了:</h3><p><img src="http://otneosm59.bkt.clouddn.com/2017_7_27_1.png" alt="乱码"></p>
<h6 id="分析一波"><a href="#分析一波" class="headerlink" title="分析一波:"></a>分析一波:</h6><blockquote>
<p>1,首先: 这些字符都在一个<code>小括号</code>“()”里面,说明这是一只<code>元组</code>,嗯,里面的东西是不能修改的.<br>2,然后: 可以发现这是<code>unicode</code>编码,怪不得看不懂,把它转换为<code>utf-8</code>就可以了.</p>
</blockquote>
<h6 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法:"></a>解决方法:</h6><blockquote>
<p>这是一只元组,不能进行直接<code>.encode(&#39;utf-8&#39;)</code>,应该一个<code>元素</code>一个的操作,中间用加号<code>+</code>连接:</p>
</blockquote>
<p><img src="http://otneosm59.bkt.clouddn.com/2017_7_27_3.png" alt="解决方法:"></p>
<h3 id="2-那啥-为了提升用户体验-虽然用户就我一个-也为了爬取很多页-一万多页的那种-的数据-我决定把-每一页的URL构造出来-为了表达我的意思-先来一张剧他喵的”形象”的代码"><a href="#2-那啥-为了提升用户体验-虽然用户就我一个-也为了爬取很多页-一万多页的那种-的数据-我决定把-每一页的URL构造出来-为了表达我的意思-先来一张剧他喵的”形象”的代码" class="headerlink" title="2,那啥,为了提升用户体验(虽然用户就我一个),也为了爬取很多页(一万多页的那种)的数据,我决定把,每一页的URL构造出来,为了表达我的意思,先来一张剧他喵的”形象”的代码:"></a>2,那啥,为了提升用户体验(虽然用户就我一个),也为了爬取很多页(一万多页的那种)的数据,我决定把,每一页的<code>URL</code>构造出来,为了表达我的意思,先来一张剧他喵的”形象”的代码:</h3><p><img src="http://otneosm59.bkt.clouddn.com/2017_7_27_4.png" alt="&quot;形象&quot;的代码"></p>
<p>很明显,这是有问题的:</p>
<p><img src="http://otneosm59.bkt.clouddn.com/2017_7_27_5.png" alt="问题"></p>
<h6 id="分析一波-1"><a href="#分析一波-1" class="headerlink" title="分析一波:"></a>分析一波:</h6><blockquote>
<ul>
<li>这里的坑就是:<code>raw_input()</code>进来的是一只<code>char</code>,而<code>range</code>里面的确是一只<code>int</code>,这样<code>x</code>就很尴尬了,然后就出错了;</li>
</ul>
</blockquote>
<h6 id="解决方法-1"><a href="#解决方法-1" class="headerlink" title="解决方法:"></a>解决方法:</h6><p><img src="http://otneosm59.bkt.clouddn.com/2017_7_27_7.png" alt="解决方法"></p>
<blockquote>
<ul>
<li>解决方法很简单,(能力有限,暂时只想到这只弱智的方法.),大家看一下就可以明白了,就是进行<code>两下</code>进制转换就可以了;</li>
<li>输出的结果,大概就是这样, 妥妥的:</li>
</ul>
</blockquote>
<p><img src="http://otneosm59.bkt.clouddn.com/2017_7_27_6.png" alt="输出的结果"></p>
<h2 id="总结一下"><a href="#总结一下" class="headerlink" title="总结一下:"></a>总结一下:</h2><p>这篇文章,重点并不是<code>爬虫技术</code>(其实这篇也没什么技术),而是<code>python</code>的基础知识,在下在群里看到过很多次这种问题,碰巧自己也遇到了,所有在这里总结一下.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://otneosm59.bkt.clouddn.com/fem_blog_1.jpg&quot; alt=&quot;封面&quot;&gt;&lt;br&gt;某日,发现一只挺好的&lt;a href=&quot;http://sj.zol.com.cn/mobilesoft/good_1.html&quot; t
    
    </summary>
    
      <category term="python" scheme="http://www.oez-blog.space/categories/python/"/>
    
    
      <category term="python_基础知识" scheme="http://www.oez-blog.space/tags/python-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>django学习之初识表单提交</title>
    <link href="http://www.oez-blog.space/2017/07/24/django%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%88%9D%E8%AF%86%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4/"/>
    <id>http://www.oez-blog.space/2017/07/24/django学习之初识表单提交/</id>
    <published>2017-07-24T22:09:11.000Z</published>
    <updated>2017-07-24T04:06:14.959Z</updated>
    
    <content type="html"><![CDATA[<p>生活所迫，学习web；人生苦短，我用Python。<br><a href="www.oez-blog.space/2017/07/22/django学习之环境搭建与工具准备/">上一篇文章</a>总结了Django环境的搭建，今天来使用Django实现表单的提交功能。</p>
<h2 id="一，环境说明"><a href="#一，环境说明" class="headerlink" title="一，环境说明:"></a>一，环境说明:</h2><blockquote>
<ul>
<li>windows 7</li>
<li>python 2.1.13</li>
<li>Django 1.9.8</li>
<li>MySQL 数据库</li>
</ul>
</blockquote>
<h2 id="二，素材及源代码获取链接"><a href="#二，素材及源代码获取链接" class="headerlink" title="二，素材及源代码获取链接:"></a>二，素材及源代码获取链接:</h2><p><a href="https://github.com/zhangcaocao/django_-Form-submission" target="_blank" rel="external">Github上</a></p>
<h2 id="三，实现过程"><a href="#三，实现过程" class="headerlink" title="三，实现过程:"></a>三，实现过程:</h2><h3 id="1，Django的配置"><a href="#1，Django的配置" class="headerlink" title="1，Django的配置:"></a>1，Django的配置:</h3><h5 id="gt-1，完善目录结构"><a href="#gt-1，完善目录结构" class="headerlink" title="&gt; 1，完善目录结构:"></a>&gt; 1，完善目录结构:</h5><p><img src="http://www.oez-blog.space/images/Django_form_1.png" alt="目录结构"></p>
<h6 id="新增的各个目录的作用"><a href="#新增的各个目录的作用" class="headerlink" title="新增的各个目录的作用:"></a>新增的各个目录的作用:</h6><blockquote>
<ul>
<li><code>log</code> :   保存的是项目产生的一些日志文件；</li>
<li><code>media</code>:  用户上传的文件；</li>
<li><code>static</code>: 静态文件{图片，css， js文件}；</li>
</ul>
</blockquote>
<h5 id="gt-2，新建一个App"><a href="#gt-2，新建一个App" class="headerlink" title="&gt; 2，新建一个App:"></a>&gt; 2，新建一个App:</h5><h6 id="1，运行manage-py文件"><a href="#1，运行manage-py文件" class="headerlink" title="1，运行manage.py文件:"></a>1，运行<code>manage.py</code>文件:</h6><blockquote>
<p>Tools -&gt; Run manage.py Task<br>并且运行如下命令:</p>
</blockquote>
<p><img src="http://www.oez-blog.space/images/Django_form_2.png" alt="新建一个App"></p>
<h6 id="2，-在setting文件中注册新增加的APP；"><a href="#2，-在setting文件中注册新增加的APP；" class="headerlink" title="2， 在setting文件中注册新增加的APP；"></a>2， 在setting文件中注册新增加的APP；</h6><p><img src="http://www.oez-blog.space/images/Django_form_3.png" alt="注册新增加的APP"></p>
<h5 id="gt-3，导入模板文件-amp-css文件"><a href="#gt-3，导入模板文件-amp-css文件" class="headerlink" title="&gt; 3，导入模板文件&amp;css文件:"></a>&gt; 3，导入模板文件&amp;css文件:</h5><h6 id="1，将HTML文件放入templates文件夹中；"><a href="#1，将HTML文件放入templates文件夹中；" class="headerlink" title="1，将HTML文件放入templates文件夹中；"></a>1，将<code>HTML文件</code>放入<code>templates</code>文件夹中；</h6><h6 id="2，在static文件夹下新建一个css文件夹，并且将style-css文件放入此文件夹中；"><a href="#2，在static文件夹下新建一个css文件夹，并且将style-css文件放入此文件夹中；" class="headerlink" title="2，在static文件夹下新建一个css文件夹，并且将style.css文件放入此文件夹中；"></a>2，在<code>static</code>文件夹下新建一个<code>css</code>文件夹，并且将<code>style.css</code>文件放入此文件夹中；</h6><h6 id="3，配置好HTML文件和CSS文件的路径"><a href="#3，配置好HTML文件和CSS文件的路径" class="headerlink" title="3，配置好HTML文件和CSS文件的路径:"></a>3，配置好<code>HTML文件</code>和<code>CSS文件</code>的路径:</h6><blockquote>
<p>1，首先是找到<code>setting文件</code>中的<code>BASE_DIR</code>，这是该项目的根目录:</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</div></pre></td></tr></table></figure>
<blockquote>
<p>2，配置<code>HTML文件</code>的路径:</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">TEMPLATES = [</div><div class="line">    &#123;</div><div class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</div><div class="line">        <span class="string">'DIRS'</span>: [os.path.join(BASE_DIR, <span class="string">'templates'</span>)]</div></pre></td></tr></table></figure>
<blockquote>
<p>3，配置<code>Css</code>文件的路径:</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">STATIC_URL = <span class="string">'/static/'</span></div><div class="line">STATICFILES_DIRS = [</div><div class="line">    os.path.join(BASE_DIR, <span class="string">'static'</span>)</div><div class="line">]</div></pre></td></tr></table></figure>
<h5 id="gt-4，数据库的配置，并生成一些Django需要的基本的表"><a href="#gt-4，数据库的配置，并生成一些Django需要的基本的表" class="headerlink" title="&gt; 4，数据库的配置，并生成一些Django需要的基本的表:"></a>&gt; 4，数据库的配置，并生成一些Django需要的基本的表:</h5><h6 id="1，新建一个数据库-test-django"><a href="#1，新建一个数据库-test-django" class="headerlink" title="1，新建一个数据库:test_django:"></a>1，新建一个数据库:<code>test_django</code>:</h6><p><img src="http://www.oez-blog.space/images/Django_form_4.png" alt="新建一个数据库"></p>
<h6 id="2，配置setting文件"><a href="#2，配置setting文件" class="headerlink" title="2，配置setting文件:"></a>2，配置<code>setting文件</code>:</h6><p><img src="http://www.oez-blog.space/images/Django_form_5.png" alt="配置`setting文件`"></p>
<h6 id="3，运行Run-manage-py-Task，-并生成Django项目所需要的基本的表"><a href="#3，运行Run-manage-py-Task，-并生成Django项目所需要的基本的表" class="headerlink" title="3，运行Run manage.py Task， 并生成Django项目所需要的基本的表:"></a>3，运行<code>Run manage.py Task</code>， 并生成Django项目所需要的基本的表:</h6><p><img src="http://www.oez-blog.space/images/Django_form_6.png" alt="生成Django项目所需要的基本的表"></p>
<p><img src="http://www.oez-blog.space/images/Django_form_7.png" alt="生成Django项目所需要的基本的表"></p>
<h3 id="2，表单提交功能的实现"><a href="#2，表单提交功能的实现" class="headerlink" title="2，表单提交功能的实现:"></a>2，表单提交功能的实现:</h3><h5 id="gt-1，实现表单提交页面"><a href="#gt-1，实现表单提交页面" class="headerlink" title="&gt; 1，实现表单提交页面:"></a>&gt; 1，实现表单提交页面:</h5><blockquote>
<p>1， 配置<code>views.py文件</code>:</p>
</blockquote>
<p><img src="http://www.oez-blog.space/images/Django_form_8.png" alt="配置`views.py文件`"></p>
<blockquote>
<p>2， 配置<code>urls.py文件</code>:</p>
</blockquote>
<p><img src="http://www.oez-blog.space/images/Django_form_9.png" alt="配置`urls.py文件`"></p>
<blockquote>
<p>3，如图所示:</p>
</blockquote>
<p><img src="http://www.oez-blog.space/images/Django_form_10.jpg" alt="效果图"></p>
<h5 id="gt-2，实现表单提交功能"><a href="#gt-2，实现表单提交功能" class="headerlink" title="&gt; 2，实现表单提交功能:"></a>&gt; 2，实现表单提交功能:</h5><blockquote>
<p>1，根据<code>HTML文件</code>配置<code>models.py文件</code></p>
</blockquote>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>姓名 :<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"&#123;&#123; my_message.name &#125;&#125;"</span> <span class="attr">class</span>=<span class="string">"error"</span> <span class="attr">placeholder</span>=<span class="string">"请输入您的姓名"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"error-msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">label</span>&gt;</span></div></pre></td></tr></table></figure>
<p>根据代码里面的<code>name=&quot;name&quot;</code>字段，配置<code>models.py文件</code>:<br><img src="http://www.oez-blog.space/images/Django_form_11.png" alt="配置`models.py文件`"></p>
<blockquote>
<p>2，同上面生成<code>Django项目所需要的基本的表</code>的操作相同，运行<code>Run manage.py Task</code>，生成相应的所需要的表:</p>
</blockquote>
<p><img src="http://www.oez-blog.space/images/Django_form_12.png" alt="生成相应的所需要的表"></p>
<blockquote>
<p>3，实现提交数据的功能:</p>
</blockquote>
<p>配置 Views.py文件:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</div><div class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> UserMessage   <span class="comment">#.(models)，表示当前目录</span></div><div class="line"><span class="comment"># Create your views here.</span></div><div class="line"><span class="string">'''</span></div><div class="line">name, email, address, message, object_id</div><div class="line">'''</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_form</span><span class="params">(request)</span>:</span></div><div class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</div><div class="line">        name = request.POST.get(<span class="string">'name'</span>, <span class="string">''</span>)</div><div class="line">        email = request.POST.get(<span class="string">'email'</span>, <span class="string">''</span>)</div><div class="line">        address = request.POST.get(<span class="string">'address'</span>, <span class="string">''</span>)</div><div class="line">        message = request.POST.get(<span class="string">'message'</span>, <span class="string">''</span>)</div><div class="line"></div><div class="line">        User_Message = UserMessage()</div><div class="line">        User_Message.message = message</div><div class="line">        User_Message.email = email</div><div class="line">        User_Message.name = name</div><div class="line">        User_Message.address = address</div><div class="line">        User_Message.object_id = <span class="string">"Zcc_Django_blog_test"</span></div><div class="line">        User_Message.save()</div><div class="line"></div><div class="line">    <span class="keyword">return</span> render(request, <span class="string">'message_form.html'</span>)</div></pre></td></tr></table></figure></p>
<blockquote>
<p>如此，便可实现表单内容的提交，并且保存到数据库中:</p>
</blockquote>
<p><img src="http://www.oez-blog.space/images/Django_form_13.png" alt="表单内容"></p>
<h2 id="四，总结一下"><a href="#四，总结一下" class="headerlink" title="四，总结一下:"></a>四，总结一下:</h2><blockquote>
<p>上面实现了Django基本的表单提交并且保存到数据库的功能，下一篇文章将以此工程为模板，进行调试，深入探究表单提交的功能实现；</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;生活所迫，学习web；人生苦短，我用Python。&lt;br&gt;&lt;a href=&quot;www.oez-blog.space/2017/07/22/django学习之环境搭建与工具准备/&quot;&gt;上一篇文章&lt;/a&gt;总结了Django环境的搭建，今天来使用Django实现表单的提交功能。&lt;/p
    
    </summary>
    
      <category term="Django" scheme="http://www.oez-blog.space/categories/Django/"/>
    
    
      <category term="Django_表单提交" scheme="http://www.oez-blog.space/tags/Django-%E8%A1%A8%E5%8D%95%E6%8F%90%E4%BA%A4/"/>
    
  </entry>
  
  <entry>
    <title>django学习之环境搭建与工具准备</title>
    <link href="http://www.oez-blog.space/2017/07/22/django%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E5%B7%A5%E5%85%B7%E5%87%86%E5%A4%87/"/>
    <id>http://www.oez-blog.space/2017/07/22/django学习之环境搭建与工具准备/</id>
    <published>2017-07-23T01:28:00.000Z</published>
    <updated>2017-07-22T08:40:19.629Z</updated>
    
    <content type="html"><![CDATA[<p>生活所迫，学习web；人生苦短，我用Python。<br>这篇文章总结的是学习Python的django框架之前所做的准备，主要包括两方面:</p>
<blockquote>
<ul>
<li>环境搭建</li>
<li>工具准备</li>
</ul>
</blockquote>
<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建:"></a>环境搭建:</h2><h4 id="1，Python的安装"><a href="#1，Python的安装" class="headerlink" title="1，Python的安装"></a>1，Python的安装</h4><blockquote>
<ul>
<li>版本 2.7.13</li>
<li>下载地址:<a href="https://www.python.org/ftp/python/2.7.13/python-2.7.13.msi" target="_blank" rel="external">python2.7.13</a></li>
<li><a href="http://www.cnblogs.com/dangeal/p/5455005.html" target="_blank" rel="external">python环境变量配置</a></li>
</ul>
</blockquote>
<h4 id="2，Python虚拟环境的安装"><a href="#2，Python虚拟环境的安装" class="headerlink" title="2，Python虚拟环境的安装:"></a>2，Python虚拟环境的安装:</h4><h5 id="1，virtualenv安装"><a href="#1，virtualenv安装" class="headerlink" title="1，virtualenv安装:"></a>1，virtualenv安装:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install virtualenv</div></pre></td></tr></table></figure>
<p><img src="http://www.oez-blog.space/images/P_Virtualenv.png" alt="virtualenv安装"></p>
<h5 id="2，virtualenvwrapper安装"><a href="#2，virtualenvwrapper安装" class="headerlink" title="2，virtualenvwrapper安装:"></a>2，virtualenvwrapper安装:</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install virtualenvwrapper-win  <span class="comment">#  linux 不用加上"-win"</span></div></pre></td></tr></table></figure>
<p><img src="http://www.oez-blog.space/images/P_Virtualenvwrapper.png" alt="virtualenvwrapper安装"></p>
<h5 id="3，virtualenvwrapper虚拟环境用法简介"><a href="#3，virtualenvwrapper虚拟环境用法简介" class="headerlink" title="3，virtualenvwrapper虚拟环境用法简介:"></a>3，virtualenvwrapper虚拟环境用法简介:</h5><h6 id="1，创建一个虚拟环境”testvir”"><a href="#1，创建一个虚拟环境”testvir”" class="headerlink" title="1，创建一个虚拟环境”testvir”:"></a>1，创建一个虚拟环境”testvir”:</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkvirtualenv testvir</div></pre></td></tr></table></figure>
<h6 id="2，workon指令，查看所有的虚拟环境；"><a href="#2，workon指令，查看所有的虚拟环境；" class="headerlink" title="2，workon指令，查看所有的虚拟环境；"></a>2，<code>workon</code>指令，查看所有的虚拟环境；</h6><h6 id="3，-进入-退出testvir虚拟环境"><a href="#3，-进入-退出testvir虚拟环境" class="headerlink" title="3， 进入/退出testvir虚拟环境:"></a>3， 进入/退出<code>testvir</code>虚拟环境:</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">workon testvir</div><div class="line">deactivate</div></pre></td></tr></table></figure>
<h6 id="4，虚拟环境的所在的目录"><a href="#4，虚拟环境的所在的目录" class="headerlink" title="4，虚拟环境的所在的目录:"></a>4，虚拟环境的所在的目录:</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\Users\Username\Envs</div></pre></td></tr></table></figure>
<h5 id="3，Django的安装"><a href="#3，Django的安装" class="headerlink" title="3，Django的安装:"></a>3，Django的安装:</h5><h6 id="1，创建虚拟环境，并且进入"><a href="#1，创建虚拟环境，并且进入" class="headerlink" title="1，创建虚拟环境，并且进入:"></a>1，创建虚拟环境，并且进入:</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkvirtualenv Django_Demo</div></pre></td></tr></table></figure>
<h6 id="2，使用pip命令安装Django-1-9-8"><a href="#2，使用pip命令安装Django-1-9-8" class="headerlink" title="2，使用pip命令安装Django == 1.9.8"></a>2，使用<code>pip</code>命令安装Django == 1.9.8</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install django == <span class="number">1.9</span><span class="number">.8</span> <span class="comment"># 注意版本是1.9.8</span></div></pre></td></tr></table></figure>
<h5 id="4，MySQL数据库的安装"><a href="#4，MySQL数据库的安装" class="headerlink" title="4，MySQL数据库的安装:"></a>4，MySQL数据库的安装:</h5><blockquote>
<p>下载地址:  <a href="https://www.baidu.com/link?url=26Mx2tX1_khpUcXsV5Kgp_1XLTQaNSrJF2cpx3-1SfKCdcxVBE4kNDlKHaIPPnIkcQLc2e1o0uk7qc7wHdJbX4OSxLOE_hoXxPecwohA9fq&amp;wd=&amp;eqid=c64a3144000169000000000359735ea3" target="_blank" rel="external">MySQL for Windows</a></p>
</blockquote>
<h2 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h2><p>需要以下三个工具: </p>
<blockquote>
<ul>
<li><a href="https://www.jetbrains.com/pycharm/download/#section=windows" target="_blank" rel="external">Pycharm专业版</a></li>
<li><a href="https://www.baidu.com/link?url=Ic9hLREUPAGDu1IMXnyAF2p0xdKK4mAi7Hu3X-UKuO7fuYdi0YcIppnbH6_MrCSx80q2E6pXhrEXtjdgvJMM89_tNNdEHqplB6gi4HB3rra&amp;wd=&amp;eqid=9d60e04c000130fd0000000359735f91" target="_blank" rel="external">Navicat for MySQL</a></li>
</ul>
</blockquote>
<h4 id="1，PyCharm注册码的获取"><a href="#1，PyCharm注册码的获取" class="headerlink" title="1，PyCharm注册码的获取:"></a>1，PyCharm注册码的获取:</h4><p><a href="http://idea.lanyus.com/" target="_blank" rel="external">传送门</a></p>
<h4 id="2，Navicat破解方法"><a href="#2，Navicat破解方法" class="headerlink" title="2，Navicat破解方法:"></a>2，Navicat破解方法:</h4><p>。。。。。大约一小时后。。。。</p>
<p>他喵的，那玩意的Windows版本太难破解了，惊了，不过找到了个更好的.2333</p>
<p><a href="http://download.csdn.net/detail/hewuke2005/9846936" target="_blank" rel="external">获取链接</a> –拿走不谢</p>
<h2 id="总结一下"><a href="#总结一下" class="headerlink" title="总结一下"></a>总结一下</h2><p>本篇文章总结了基本的环境搭建和工具安装，下一篇将带来具体的示例<code>Django的表单提交</code>来总结Django的操作。</p>
<p>最后，如果有娃对<code>Navicat</code>那玩意恋恋不忘的话:</p>
<blockquote>
<p>1， 可以选择去弄一只Linux虚拟机，然后配置一下，Linux下的很好破解，<a href="http://tycomputer.iteye.com/blog/1499499" target="_blank" rel="external">教程</a>；<br>2， 当然是一直试用，不关软件啦，23333。</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;生活所迫，学习web；人生苦短，我用Python。&lt;br&gt;这篇文章总结的是学习Python的django框架之前所做的准备，主要包括两方面:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;环境搭建&lt;/li&gt;
&lt;li&gt;工具准备&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquo
    
    </summary>
    
      <category term="Django" scheme="http://www.oez-blog.space/categories/Django/"/>
    
    
      <category term="Python_环境搭建" scheme="http://www.oez-blog.space/tags/Python-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>双系统Windows下直接删除Linux分区后解决办法</title>
    <link href="http://www.oez-blog.space/2017/07/19/%E5%8F%8C%E7%B3%BB%E7%BB%9FWindows%E4%B8%8B%E7%9B%B4%E6%8E%A5%E5%88%A0%E9%99%A4Linux%E5%88%86%E5%8C%BA%E5%90%8E%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.oez-blog.space/2017/07/19/双系统Windows下直接删除Linux分区后解决办法/</id>
    <published>2017-07-19T23:08:44.000Z</published>
    <updated>2017-07-19T04:27:55.402Z</updated>
    
    <content type="html"><![CDATA[<p>昨天晚上凌晨3点左右，发现win7的C盘空间不太够了，于是想删除一个系统，扩大C盘的空间，于是果断百度一下，然后直接删除Linux分区，表示网上那么多教程，怕啥，结果，嗯今天下午才弄好，使用在这里记录一下：</p>
<h4 id="症状：开机之后面对我的是这样一串文字："><a href="#症状：开机之后面对我的是这样一串文字：" class="headerlink" title="症状：开机之后面对我的是这样一串文字："></a>症状：开机之后面对我的是这样一串文字：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">GRUB loading </div><div class="line">error: unknow filesystem</div><div class="line">group rescue &gt; _</div></pre></td></tr></table></figure>
<p>大概就是<code>系统引导</code>什么的出问题了吧，也就是系统文件都还在。</p>
<h4 id="原因：下面的操作会产生上述症状，更多操作参见这里："><a href="#原因：下面的操作会产生上述症状，更多操作参见这里：" class="headerlink" title="原因：下面的操作会产生上述症状，更多操作参见这里："></a>原因：下面的操作会产生上述症状，更多操作参见<a href="https://zhidao.baidu.com/question/2011441867425456828.html?qq-pf-to=pcqq.c2c" target="_blank" rel="external">这里</a>：</h4><blockquote>
<p>1，直接下<code>Windows</code>下<code>删除</code>或者<code>格式化</code>掉了Linux所在的分区；<br>2，重新安装了<code>Linux</code>到新的分区，原有的分区已经格式化了，但是没有重装grup2；</p>
</blockquote>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法:"></a>解决方法:</h4><h6 id="1，工具："><a href="#1，工具：" class="headerlink" title="1，工具："></a>1，工具：</h6><blockquote>
<ul>
<li>一个U盘，一台能用的电脑；</li>
<li><a href="http://www.dabaicai.com/down_135.html" target="_blank" rel="external">大白菜PE修复工具</a></li>
</ul>
</blockquote>
<h6 id="2，具体步骤："><a href="#2，具体步骤：" class="headerlink" title="2，具体步骤："></a>2，具体步骤：</h6><blockquote>
<p>1，安装大白菜PE修复工具，并且制作到U盘中；<br>2，其他步骤参考<a href="http://www.dabaicai.com/down_135.html" target="_blank" rel="external">链接</a>;</p>
</blockquote>
<h4 id="遇到的坑："><a href="#遇到的坑：" class="headerlink" title="遇到的坑："></a>遇到的坑：</h4><blockquote>
<p>1，使用大白菜的时候报错：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">the bios <span class="keyword">in</span> this system <span class="keyword">is</span> full acpi complicant.....</div></pre></td></tr></table></figure></p>
</blockquote>
<p>解决方法： 开机过程中，疯狂的摁<code>F7</code>，大概翻译一下上面的英文，就是在开机过程中摁<code>F7</code>，可以跳过安装那个上面玩意，然后就可以不管”full acpi complicant”这个东西了。</p>
<blockquote>
<p>2，删除Linux分区后，增加C盘容量的工具获取：</p>
</blockquote>
<p><img src="http://www.oez-blog.space/images/DiskGenius.jpg" alt="DiskGenius"><br><a href="https://pan.baidu.com/s/1nuZok4p" target="_blank" rel="external">获取链接</a></p>
<h4 id="总结一下："><a href="#总结一下：" class="headerlink" title="总结一下："></a>总结一下：</h4><blockquote>
<ul>
<li>之前安装了win7+kali Linux + ubuntu，相比之下，个人感觉还是win7好用。</li>
<li>软件安装目录保持默认，把C盘的空间分大一点；不安装电脑管家什么的，打开Windows的自动更新，防火墙，妥妥的简单流畅。</li>
<li>linux什么的，等win7不更新再说吧。</li>
</ul>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨天晚上凌晨3点左右，发现win7的C盘空间不太够了，于是想删除一个系统，扩大C盘的空间，于是果断百度一下，然后直接删除Linux分区，表示网上那么多教程，怕啥，结果，嗯今天下午才弄好，使用在这里记录一下：&lt;/p&gt;
&lt;h4 id=&quot;症状：开机之后面对我的是这样一串文字：&quot;&gt;
    
    </summary>
    
      <category term="linux" scheme="http://www.oez-blog.space/categories/linux/"/>
    
    
      <category term="双系统的坑" scheme="http://www.oez-blog.space/tags/%E5%8F%8C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>STM32_初识GPIO操作_程序示例</title>
    <link href="http://www.oez-blog.space/2017/07/18/STM32-%E5%88%9D%E8%AF%86GPIO%E6%93%8D%E4%BD%9C-%E7%A8%8B%E5%BA%8F%E7%A4%BA%E4%BE%8B/"/>
    <id>http://www.oez-blog.space/2017/07/18/STM32-初识GPIO操作-程序示例/</id>
    <published>2017-07-18T16:40:57.000Z</published>
    <updated>2017-07-17T23:15:13.578Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.oez-blog.space/2017/07/17/STM32_GPIO_%E6%80%BB%E7%BB%93/">上一篇文章</a>讲解了<code>GPIO</code>和相对应的<code>寄存器</code>的基础知识，这一篇则是对上一篇知识点的应用：</p>
<h4 id="几点说明："><a href="#几点说明：" class="headerlink" title="几点说明："></a>几点说明：</h4><blockquote>
<p>1, 由于硬件上的不统一，加之GPIO口的通用性，此处采用模拟仿真的方法，观察内部寄存器的数据变化；<br>2，本次实验所用到的操作主要有：<code>位绑定</code>，<code>寄存器的操作</code>，<code>基本的位运算</code><br>3，本次实验的目的是：控制GPIOA低8位的输出，并且使高8位的对应位输入相同的电平：<br>E.g： 若2位输出 0，则对应的10位输入 0；</p>
</blockquote>
<h4 id="实验内容："><a href="#实验内容：" class="headerlink" title="实验内容："></a>实验内容：</h4><h6 id="1，参考文档中对GPIO口的基本配置："><a href="#1，参考文档中对GPIO口的基本配置：" class="headerlink" title="1，参考文档中对GPIO口的基本配置："></a>1，参考文档中对GPIO口的基本配置：</h6><blockquote>
<ul>
<li><a href="https://pan.baidu.com/s/1cGob62" target="_blank" rel="external">文档</a>中对STM32的IO口的配置：<br><img src="http://www.oez-blog.space/images/GPIO_3.PNG" alt="GPIO端口位配置表"></li>
<li><a href="https://pan.baidu.com/s/1cGob62" target="_blank" rel="external">文档</a>中对端口配置低寄存器(GPIOx_CRL)的配置：<br><img src="http://www.oez-blog.space/images/GPIO_4.PNG" alt="端口配置低寄存器(GPIOx_CRL)的配置"></li>
</ul>
</blockquote>
<h6 id="2，程序的大致思路："><a href="#2，程序的大致思路：" class="headerlink" title="2，程序的大致思路："></a>2，程序的大致思路：</h6><blockquote>
<ul>
<li><p>PA.0 ~ PA.7 为通用的推挽输出，速度为50MHz， PA.8 ~ PA.15位浮空输入；</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">GPIOA-&gt;CRL = <span class="number">0x33333333</span>; <span class="comment">//通用的退挽输出 00； 50MHz 11； 0011 -&gt; 3 -&gt; 0x3333 3333;</span></div><div class="line">GPIOA-&gt;CRH = <span class="number">0x44444444</span>; <span class="comment">//浮空输入 0100 -&gt; 4 -&gt; 0x4444 4444;</span></div></pre></td></tr></table></figure>
</li>
<li><p>输入状态反映到对应的引脚的输出；</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span>(<span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> ((GPIOA-&gt;IDR &amp; <span class="number">0x0100</span>)== <span class="number">0x0100</span>)	</div><div class="line">		      GPIOA-&gt;BSRR = <span class="number">0x01</span>; </div><div class="line">		<span class="keyword">else</span>	                            </div><div class="line">		       GPIOA-&gt;BRR = <span class="number">0x01</span>;</div><div class="line">		<span class="keyword">if</span> ((GPIOA-&gt;IDR &amp; <span class="number">0x0200</span>)== <span class="number">0x0200</span>)	</div><div class="line">		      GPIOA-&gt;BSRR = <span class="number">0x02</span>;              </div><div class="line">		<span class="keyword">else</span>	                           </div><div class="line">		      GPIOA-&gt;BRR =<span class="number">0x02</span>;</div><div class="line">		<span class="keyword">if</span> ((GPIOA-&gt;IDR &amp; <span class="number">0x0400</span>)== <span class="number">0x0400</span>)	</div><div class="line">		      GPIOA-&gt;ODR = GPIOA-&gt;ODR | <span class="number">0x04</span>; </div><div class="line">		<span class="keyword">else</span>								</div><div class="line">		      GPIOA-&gt;ODR = GPIOA-&gt;ODR &amp; (~<span class="number">0x04</span>);</div><div class="line">		</div><div class="line">		<span class="comment">/*位绑定*/</span>	</div><div class="line">		<span class="comment">// A = GPIOA_BASE + ODR偏移地址 = GPIOA_BASE + 0x0C ; n = 3</span></div><div class="line">		<span class="comment">// A = GPIOA_BASE + IDR偏移地址 = GPIOA_BASE + 0x08 ; n = 3</span></div><div class="line"></div><div class="line">		<span class="comment">//if ((GPIOA-&gt;IDR &amp; 0x0800)== 0x0800)</span></div><div class="line">		<span class="keyword">if</span>(*PA_I_11==<span class="number">1</span>)		                    </div><div class="line">		      *PA_0_3 = <span class="number">3</span>;     <span class="comment">//只看低位</span></div><div class="line">		<span class="keyword">else</span>									</div><div class="line">		      *PA_0_3 = <span class="number">2</span>;</div><div class="line">		<span class="comment">/*此处不能使用直接的赋值方法，应该采用位运算的方法进行设置*/</span></div><div class="line">		<span class="keyword">if</span> ((GPIOA-&gt;IDR &amp; <span class="number">0x1000</span>)== <span class="number">0x1000</span>)</div><div class="line">			GPIOA-&gt;ODR = GPIOA-&gt;ODR | <span class="number">0x10</span>; </div><div class="line">		<span class="keyword">else</span>								</div><div class="line">	        GPIOA-&gt;ODR = GPIOA-&gt;ODR &amp; (~<span class="number">0x10</span>);</div><div class="line"></div><div class="line">		<span class="keyword">if</span> ((GPIOA-&gt;IDR &amp; <span class="number">0x2000</span>)== <span class="number">0x2000</span>)	</div><div class="line">		      GPIOA-&gt;ODR = GPIOA-&gt;ODR | <span class="number">0x20</span>; </div><div class="line">		<span class="keyword">else</span>								</div><div class="line">		      GPIOA-&gt;ODR = GPIOA-&gt;ODR &amp; (~<span class="number">0x20</span>);</div><div class="line"></div><div class="line">		<span class="keyword">if</span> ((GPIOA-&gt;IDR &amp; <span class="number">0x4000</span>)== <span class="number">0x4000</span>)!</div><div class="line">		      GPIOA-&gt;ODR = GPIOA-&gt;ODR | <span class="number">0x40</span>;</div><div class="line">		<span class="keyword">else</span>								</div><div class="line">		      GPIOA-&gt;ODR = GPIOA-&gt;ODR &amp; (~<span class="number">0x40</span>);</div><div class="line"></div><div class="line">		<span class="keyword">if</span> ((GPIOA-&gt;IDR &amp; <span class="number">0x8000</span>)== <span class="number">0x8000</span>)	</div><div class="line">		      GPIOA-&gt;ODR = GPIOA-&gt;ODR | <span class="number">0x80</span>;  </div><div class="line">		<span class="keyword">else</span>								</div><div class="line">		      GPIOA-&gt;ODR = GPIOA-&gt;ODR &amp; (~<span class="number">0x80</span>);			</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
</blockquote>
<h6 id="3，对上面程序的说明："><a href="#3，对上面程序的说明：" class="headerlink" title="3，对上面程序的说明："></a>3，对上面程序的说明：</h6><p>(1)位清除/位设置寄存器：<br><img src="http://www.oez-blog.space/images/GPIO_5.PNG" alt="置位复位寄存器"><br>1,首先是在<code>if</code>判断中，进行<code>与</code>运算，判断相应的位是否为1；<br>2,后面是对<code>位清除/位设置寄存器</code>的具体操作,由文档可以知道：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">0：对对应的ODRx位不产生影响 </div><div class="line">1：清除对应的ODRx位为0</div></pre></td></tr></table></figure></p>
<p>3,将<code>GPIOA-&gt;BSRR</code>, <code>GPIOA-&gt;BRR</code>设置为相应的值，即使得相应的位为1，使得<code>BSRR</code>,<code>BRR</code>分别起到<code>置1</code>和<code>置0</code>的作用；</p>
<p>(2)基本的位运算：<br><img src="http://www.oez-blog.space/images/GPIO_6.PNG" alt="基本的位运算"><br>1,通过基本的位运算，使相应的位<code>置1</code>或者<code>清0</code>;<br>2,程序中不能直接的赋值，因此采用位运算的方法;<br>(3)位绑定：<br><img src="http://www.oez-blog.space/images/GPIO_7.PNG" alt="位绑定"><br>1, 位绑定的公式<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">公式：&#123;</div><div class="line">		<span class="number">1</span>，清楚绑定区域：&#123;</div><div class="line">			<span class="number">1</span>，SPAM；</div><div class="line">			<span class="number">2</span>，片上外设；</div><div class="line">		&#125;</div><div class="line">		<span class="number">2</span>，公式：&#123;</div><div class="line">			SPAM；&#123;AliasAddress = <span class="number">0x2200</span> <span class="number">0000</span> + ((A<span class="number">-0x2200</span> <span class="number">0000</span>) * <span class="number">8</span>+ n) * <span class="number">4</span> <span class="comment"># AliasAddress为绑定后的地址， A 为原来的地址 n为第n位；</span></div><div class="line">						 = <span class="number">0x2200</span> <span class="number">0000</span> + (A<span class="number">-0x2200</span> <span class="number">0000</span>) * <span class="number">32</span> + n * <span class="number">4</span></div><div class="line">			&#125;</div><div class="line">			片上外设；&#123;AliasAddress = <span class="number">0x4200</span> <span class="number">0000</span> + ((A<span class="number">-0x4000</span> <span class="number">0000</span>) * <span class="number">8</span>+ n) * <span class="number">4</span> <span class="comment"># AliasAddress为绑定后的地址， A 为原来的地址 n为第n位；；</span></div><div class="line">						 = <span class="number">0x4200</span> <span class="number">0000</span> + (A<span class="number">-0x4000</span> <span class="number">0000</span>) * <span class="number">32</span> + n * <span class="number">4</span>				</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="number">3</span>，运用指针&#123;</div><div class="line">			u32 *PA_O_3 = (u32 *) (GPIOA_BASE + <span class="number">0x0C</span>)</div><div class="line">		&#125;</div></pre></td></tr></table></figure></p>
<p>2, STM32中提供的<code>位绑定</code>操作可以极大的简化GPIO口的运算，可以向<code>51</code>那样对端口值进行直接的配置(0/1),后面的数字只看<code>低位</code>。</p>
<h6 id="4，调试的结果："><a href="#4，调试的结果：" class="headerlink" title="4，调试的结果："></a>4，调试的结果：</h6><p>首先第一步，打开调试功能和GPIO口的窗口，如图所示：<br><img src="http://www.oez-blog.space/images/GPIO_8.PNG" alt="打开调试功能和GPIO口的窗口"><br>分别设置右下方的<code>勾勾</code>数量和位置，设置相应位的<code>置1</code>和<code>清0</code>;进行调试。</p>
<h6 id="5，源码地址："><a href="#5，源码地址：" class="headerlink" title="5，源码地址："></a>5，源码地址：</h6><p>如果你需要源码，你可以在<a href="https://github.com/zhangcaocao/GPIO-/tree/master/GPIO_%E6%93%8D%E4%BD%9C%E4%B8%8E%E5%8E%9F%E7%90%86" target="_blank" rel="external">这里</a>找到他。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.oez-blog.space/2017/07/17/STM32_GPIO_%E6%80%BB%E7%BB%93/&quot;&gt;上一篇文章&lt;/a&gt;讲解了&lt;code&gt;GPIO&lt;/code&gt;和相对应的&lt;code&gt;寄存器&lt;/code&gt;的基础知识，这一篇
    
    </summary>
    
      <category term="STM32" scheme="http://www.oez-blog.space/categories/STM32/"/>
    
    
      <category term="STM32_GPIO操作与原理" scheme="http://www.oez-blog.space/tags/STM32-GPIO%E6%93%8D%E4%BD%9C%E4%B8%8E%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>STM32_初识GPIO操作</title>
    <link href="http://www.oez-blog.space/2017/07/17/STM32_GPIO_%E6%80%BB%E7%BB%93/"/>
    <id>http://www.oez-blog.space/2017/07/17/STM32_GPIO_总结/</id>
    <published>2017-07-18T11:26:22.000Z</published>
    <updated>2017-07-17T08:51:34.814Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一，GPIO寄存器"><a href="#一，GPIO寄存器" class="headerlink" title="一，GPIO寄存器"></a>一，GPIO寄存器</h4><p><img src="http://www.oez-blog.space/images/GPIO_2.PNG" alt="I/O端口位的基本结构"></p>
<h5 id="由图我们可以知道下面一些信息："><a href="#由图我们可以知道下面一些信息：" class="headerlink" title="由图我们可以知道下面一些信息："></a>由图我们可以知道下面一些信息：</h5><h6 id="1，输出驱动电路："><a href="#1，输出驱动电路：" class="headerlink" title="1，输出驱动电路："></a>1，输出驱动电路：</h6><blockquote>
<ul>
<li><code>输出数据寄存器</code>有2种方式改变：一种是通过<code>直接读/写</code>，另一种是通过<code>位设置/位清除寄存器</code>来进行改变；</li>
<li><code>选择开关</code>：选择的是复用功能 or GPIO的输出功能；</li>
<li><code>输出控制</code>：一个<a href="http://blog.csdn.net/surgeddd/article/details/4683657" target="_blank" rel="external">锁存器</a>的电路</li>
<li><code>CMOS管</code>: 正向的P-MOS &amp; N-MOS；二者输出相反01/10；VDD 通常为3.3V；通过<code>输出控制</code>的输出值，改变P_MOS和C_MOS的导通关系，从而改变整个的输出&lt;高电平/低电平&gt;；</li>
</ul>
</blockquote>
<h6 id="2，输入驱动电路："><a href="#2，输入驱动电路：" class="headerlink" title="2，输入驱动电路："></a>2，输入驱动电路：</h6><blockquote>
<ul>
<li><code>上拉电阻</code>：上拉/下拉可以通过开关控制，通过<code>配置寄存器</code>里面进行设置；上拉/下拉开关都可以打开，也就是浮空： 模拟输入不希望有任何一点变化被上拉/下拉所修改；</li>
<li><code>TTL施密特触发器</code>: 可以进行一定的滤波，整形，开关；</li>
</ul>
</blockquote>
<h6 id="3，寄存器："><a href="#3，寄存器：" class="headerlink" title="3，寄存器："></a>3，寄存器：</h6><blockquote>
<ul>
<li><blockquote>
<p>寄存器中的各个位的具体配置可参见<a href="https://pan.baidu.com/s/1cGob62" target="_blank" rel="external">技术手册</a>，这里不再赘述；</p>
</blockquote>
</li>
<li>端口配置低寄存器(GPIOx_CRL)</li>
<li>端口配置高寄存器(GPIOx_CRH)</li>
<li>端口输入数据寄存器(GPIOx_IDR)</li>
<li>端口输出数据寄存器(GPIOx_ODR) </li>
<li>端口位设置/复位寄存器(GPIOx_BSRR)</li>
<li>端口位复位寄存器(GPIOx_BRR)</li>
<li>端口配置锁定寄存器(GPIOx_LCKR)</li>
</ul>
</blockquote>
<h4 id="二，GPIO输入输出模式："><a href="#二，GPIO输入输出模式：" class="headerlink" title="二，GPIO输入输出模式："></a>二，GPIO输入输出模式：</h4><h6 id="1，在库函数中的定义："><a href="#1，在库函数中的定义：" class="headerlink" title="1，在库函数中的定义："></a>1，在库函数中的定义：</h6><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span></div><div class="line">&#123; GPIO_Mode_AIN = <span class="number">0x0</span>,						<span class="comment">//模拟输入；</span></div><div class="line">  GPIO_Mode_IN_FLOATING = <span class="number">0x04</span>,  	        <span class="comment">//浮空输入；</span></div><div class="line">  GPIO_Mode_IPD = <span class="number">0x28</span>,     			    <span class="comment">//下拉输入；</span></div><div class="line">  GPIO_Mode_IPU = <span class="number">0x48</span>,		  			    <span class="comment">//上拉输入；</span></div><div class="line">  GPIO_Mode_Out_OD = <span class="number">0x14</span>,				    <span class="comment">//Open-Drain通用开漏输出</span></div><div class="line">  GPIO_Mode_Out_PP = <span class="number">0x10</span>,				    <span class="comment">//Push-Pull通用推挽输出</span></div><div class="line">  GPIO_Mode_AF_OD = <span class="number">0x1C</span>,					<span class="comment">//复用功能</span></div><div class="line">  GPIO_Mode_AF_PP = <span class="number">0x18</span></div><div class="line">&#125;GPIOMode_TypeDef;</div></pre></td></tr></table></figure>
<h6 id="2，对每种输入-输出方式的解释，详见逸嵌YuWendong的博客"><a href="#2，对每种输入-输出方式的解释，详见逸嵌YuWendong的博客" class="headerlink" title="2，对每种输入/输出方式的解释，详见逸嵌YuWendong的博客"></a>2，对每种输入/输出方式的解释，详见<a href="http://blog.sina.com.cn/s/blog_bf63e2650102wihq.html" target="_blank" rel="external">逸嵌YuWendong的博客</a></h6><h4 id="三，重要的库函数："><a href="#三，重要的库函数：" class="headerlink" title="三，重要的库函数："></a>三，重要的库函数：</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">GPIO_Init                           <span class="comment">//根据GPIO_InitStruct中指定的参数初始化外设GPIOx寄存器</span></div><div class="line">GPIO_ReadInputDataBit               <span class="comment">//读取指定端口管脚的输入</span></div><div class="line">GPIO_ReadInputData                  <span class="comment">//读取指定的GPIO端口输入</span></div><div class="line">GPIO_ReadOutputDataBit              <span class="comment">//读取指定端口管脚的输出</span></div><div class="line">GPIO_ReadOutputData                 <span class="comment">//读取指定的GPIO端口输出</span></div><div class="line">GPIO_SetBits                        <span class="comment">//设置指定的数据端口位</span></div><div class="line">GPIO_ResetBits                      <span class="comment">//清除指定的数据端口位</span></div><div class="line">GPIO_PinRemapConfig                 <span class="comment">//改变指定管脚的映射</span></div></pre></td></tr></table></figure>
<h6 id="这里仍然只是罗列出名字，具体的用法可参见STM32固件库使用手册的中文翻译版-pdf"><a href="#这里仍然只是罗列出名字，具体的用法可参见STM32固件库使用手册的中文翻译版-pdf" class="headerlink" title="这里仍然只是罗列出名字，具体的用法可参见STM32固件库使用手册的中文翻译版.pdf"></a>这里仍然只是罗列出名字，具体的用法可参见<a href="https://pan.baidu.com/s/1slPmQT3" target="_blank" rel="external">STM32固件库使用手册的中文翻译版.pdf</a></h6><h4 id="四，总结说明"><a href="#四，总结说明" class="headerlink" title="四，总结说明"></a>四，总结说明</h4><blockquote>
<ul>
<li>这篇文章主要是罗列出GPIO的基础知识和一些基本的学习资料，具体的代码运用见下一篇文章</li>
</ul>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;一，GPIO寄存器&quot;&gt;&lt;a href=&quot;#一，GPIO寄存器&quot; class=&quot;headerlink&quot; title=&quot;一，GPIO寄存器&quot;&gt;&lt;/a&gt;一，GPIO寄存器&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://www.oez-blog.space/images
    
    </summary>
    
      <category term="STM32" scheme="http://www.oez-blog.space/categories/STM32/"/>
    
    
      <category term="STM32_GPIO操作与原理" scheme="http://www.oez-blog.space/tags/STM32-GPIO%E6%93%8D%E4%BD%9C%E4%B8%8E%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Hexo_GitHub博客搭建总结</title>
    <link href="http://www.oez-blog.space/2017/07/17/Hexo+GitHub%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/"/>
    <id>http://www.oez-blog.space/2017/07/17/Hexo+GitHub博客搭建总结/</id>
    <published>2017-07-18T08:20:06.000Z</published>
    <updated>2017-07-17T05:25:16.399Z</updated>
    
    <content type="html"><![CDATA[<p>经过这几天的捣鼓，我的第一个正式的博客已经初显雏形了，鉴于网上教程很多，所以具体细节不再叙述，可以看看下面的几个参考链接，这里只是简单的总结一下：</p>
<h4 id="1，工具准备"><a href="#1，工具准备" class="headerlink" title="1，工具准备"></a>1，工具准备</h4><blockquote>
<ul>
<li><a href="https://git-scm.com/downloads" target="_blank" rel="external">Git</a></li>
<li><a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="external">Nodejs</a></li>
<li><a href="https://hexo.io/" target="_blank" rel="external">Hexo</a></li>
<li><a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">Hexo-theme-next</a></li>
</ul>
</blockquote>
<h4 id="2，常用命令"><a href="#2，常用命令" class="headerlink" title="2，常用命令"></a>2，常用命令</h4><h6 id="gt-安装Hexo需要的命令："><a href="#gt-安装Hexo需要的命令：" class="headerlink" title="&gt;安装Hexo需要的命令："></a>&gt;安装Hexo需要的命令：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-cli -g</div><div class="line">$ hexo init blog</div><div class="line">$ cd blog</div><div class="line">$ npm install</div><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<h6 id="gt-编辑博客常用命令："><a href="#gt-编辑博客常用命令：" class="headerlink" title="&gt;编辑博客常用命令："></a>&gt;编辑博客常用命令：</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ hexo generate (hexo g)   <span class="comment">#生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</span></div><div class="line">$ hexo server (hexo s)     <span class="comment">#启动本地web服务，用于博客的预览</span></div><div class="line">$ hexo deploy (hexo d)     <span class="comment">#部署博客到远端服务器</span></div><div class="line">$ hexo new <span class="string">"postName"</span>      <span class="comment">#新建文章</span></div><div class="line">$ hexo new page <span class="string">"pageName"</span> <span class="comment">#新建页面</span></div></pre></td></tr></table></figure>
<h4 id="3，遇到的坑"><a href="#3，遇到的坑" class="headerlink" title="3，遇到的坑"></a>3，遇到的坑</h4><h6 id="gt-提示ERROR-Deployer-not-found-git"><a href="#gt-提示ERROR-Deployer-not-found-git" class="headerlink" title="&gt;提示ERROR Deployer not found: git"></a>&gt;提示<code>ERROR Deployer not found: git</code></h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo npm install hexo-deployer-git --save <span class="comment">#在根目录运行</span></div></pre></td></tr></table></figure>
<h6 id="gt-提示FATAL-Port-4000-has-been-used-Try-other-port-instead"><a href="#gt-提示FATAL-Port-4000-has-been-used-Try-other-port-instead" class="headerlink" title="&gt;提示FATAL Port 4000 has been used. Try other port instead."></a>&gt;提示<code>FATAL Port 4000 has been used. Try other port instead.</code></h6><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo hexo s -p <span class="number">5000</span> <span class="comment">#在根目录运行</span></div></pre></td></tr></table></figure>
<h6 id="gt-博客更新上传后CNAME文件丢失"><a href="#gt-博客更新上传后CNAME文件丢失" class="headerlink" title="&gt;博客更新上传后CNAME文件丢失"></a>&gt;博客更新上传后<code>CNAME</code>文件丢失</h6><blockquote>
<p>只需要在上传之前将该文件放入<code>public</code>文件夹即可;</p>
</blockquote>
<h4 id="4，参考链接"><a href="#4，参考链接" class="headerlink" title="4，参考链接"></a>4，参考链接</h4><blockquote>
<ul>
<li><a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="external">Next 主题配置</a></li>
<li><a href="http://www.jianshu.com/p/q81RER" target="_blank" rel="external">Markdown新手入门</a></li>
<li><a href="http://markeditor.com/app/markeditor" target="_blank" rel="external">Markeditor编辑器</a></li>
<li><a href="http://www.jianshu.com/p/c07ccdfba068" target="_blank" rel="external">用Hexo-nexT-GitHub搭建个人博客</a></li>
<li><a href="http://xuhaoblog.com/hexo-github-pages.html" target="_blank" rel="external">基于Hexo+GitHub Pages 搭建个人博客教程</a></li>
<li><a href="http://www.jianshu.com/p/42aa637f614a" target="_blank" rel="external">使用Hexo在Github上搭建专属博客之技术总结</a></li>
</ul>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经过这几天的捣鼓，我的第一个正式的博客已经初显雏形了，鉴于网上教程很多，所以具体细节不再叙述，可以看看下面的几个参考链接，这里只是简单的总结一下：&lt;/p&gt;
&lt;h4 id=&quot;1，工具准备&quot;&gt;&lt;a href=&quot;#1，工具准备&quot; class=&quot;headerlink&quot; title=
    
    </summary>
    
      <category term="博客完善" scheme="http://www.oez-blog.space/categories/%E5%8D%9A%E5%AE%A2%E5%AE%8C%E5%96%84/"/>
    
    
      <category term="Hexo_GitHub博客搭建" scheme="http://www.oez-blog.space/tags/Hexo-GitHub%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>使用一根网线+笔记本连接树莓派--技术总结</title>
    <link href="http://www.oez-blog.space/2017/07/17/%E4%BD%BF%E7%94%A8%E4%B8%80%E6%A0%B9%E7%BD%91%E7%BA%BF-%E7%AC%94%E8%AE%B0%E6%9C%AC%E8%BF%9E%E6%8E%A5%E6%A0%91%E8%8E%93%E6%B4%BE-%E6%8A%80%E6%9C%AF%E6%80%BB%E7%BB%93/"/>
    <id>http://www.oez-blog.space/2017/07/17/使用一根网线-笔记本连接树莓派-技术总结/</id>
    <published>2017-07-17T16:16:21.000Z</published>
    <updated>2017-07-16T22:09:26.544Z</updated>
    
    <content type="html"><![CDATA[<p>之前在学校一股脑弄了只树莓派，他喵的，结果摁是机都没开，昨天回家之后，捣鼓了一会，使用开机，因此，在这里总结一下遇到的坑：</p>
<h6 id="ssh连接是时候出现“拒绝连接”"><a href="#ssh连接是时候出现“拒绝连接”" class="headerlink" title="ssh连接是时候出现“拒绝连接”:"></a>ssh连接是时候出现“拒绝连接”:</h6><blockquote>
<p> 在树莓派SD卡的根目录新建一个ssh的空文件，打开ssh</p>
</blockquote>
<h6 id="win7的网络共享失败"><a href="#win7的网络共享失败" class="headerlink" title="win7的网络共享失败:"></a>win7的网络共享失败:</h6><blockquote>
<ul>
<li>在“开始框框”搜索“服务”，并且打开；</li>
<li>找到“Windows Firewall”，双击进入“打开”它，并设置“启动类型”为“自动”；</li>
</ul>
</blockquote>
<h6 id="关于连接的具体教程，参考知乎回答"><a href="#关于连接的具体教程，参考知乎回答" class="headerlink" title="关于连接的具体教程，参考知乎回答"></a>关于连接的具体教程，参考<a href="https://www.zhihu.com/question/20764621" target="_blank" rel="external">知乎回答</a></h6>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前在学校一股脑弄了只树莓派，他喵的，结果摁是机都没开，昨天回家之后，捣鼓了一会，使用开机，因此，在这里总结一下遇到的坑：&lt;/p&gt;
&lt;h6 id=&quot;ssh连接是时候出现“拒绝连接”&quot;&gt;&lt;a href=&quot;#ssh连接是时候出现“拒绝连接”&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="树莓派" scheme="http://www.oez-blog.space/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="树莓派--第一次开机" scheme="http://www.oez-blog.space/tags/%E6%A0%91%E8%8E%93%E6%B4%BE-%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%BC%80%E6%9C%BA/"/>
    
  </entry>
  
</feed>
